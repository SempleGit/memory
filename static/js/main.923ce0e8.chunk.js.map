{"version":3,"sources":["components/images/cats/one.jpg","components/images/cats/two.jpg","components/images/cats/three.jpg","components/images/cats/four.jpg","components/images/cats/five.jpg","components/images/cats/six.jpg","components/images/cats/seven.jpg","components/images/cats/eight.jpg","components/images/cats/nine.jpg","components/images/cats/ten.jpg","components/Cards.js","components/GameOver.js","components/Scoreboard.js","App.js","index.js"],"names":["Cards","props","useState","img","one","alt","cardNumber","two","three","four","five","six","seven","eight","nine","ten","cards","cardDisplay","array","slice","i","length","j","Math","floor","random","randomSort","map","onClick","className","src","GameOver","score","resetGame","Scoreboard","App","setScore","Set","selectedCards","setSelected","gameOver","setGameOver","id","has","selected","add","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6LAAe,MAA0B,gCCA1B,MAA0B,gCCA1B,MAA0B,kCCA1B,MAA0B,iCCA1B,MAA0B,iCCA1B,MAA0B,gCCA1B,MAA0B,kCCA1B,MAA0B,kCCA1B,MAA0B,iCCA1B,MAA0B,gCCmD1BA,EAtCD,SAACC,GAAW,IAAD,EACPC,mBAAS,CACvB,CAACC,IAAKC,EAAKC,IAAK,mBAAoBC,WAAY,GAChD,CAACH,IAAKI,EAAKF,IAAK,+CAAgDC,WAAY,GAC5E,CAACH,IAAKK,EAAOH,IAAK,iBAAkBC,WAAY,GAChD,CAACH,IAAKM,EAAMJ,IAAK,4BAA6BC,WAAY,GAC1D,CAACH,IAAKO,EAAML,IAAK,uBAAwBC,WAAY,GACrD,CAACH,IAAKQ,EAAKN,IAAK,gCAAiCC,WAAY,GAC7D,CAACH,IAAKS,EAAOP,IAAK,8BAA+BC,WAAY,GAC7D,CAACH,IAAKU,EAAOR,IAAK,+BAAgCC,WAAY,GAC9D,CAACH,IAAKW,EAAMT,IAAK,kCAAmCC,WAAY,GAChE,CAACH,IAAKY,EAAKV,IAAK,kCAAmCC,WAAY,MAV1DU,EADgB,oBA6BvB,IAAMC,EATN,WAEE,IADA,IAAMC,EAAQF,EAAMG,QACXC,EAAIF,EAAMG,OAAS,EAAGD,EAAI,EAAGA,IAAK,CACvC,IAAME,EAAIC,KAAKC,MAAMD,KAAKE,UAAYL,EAAI,IADH,EAEhB,CAACF,EAAMI,GAAIJ,EAAME,IAAvCF,EAAME,GAFgC,KAE5BF,EAAMI,GAFsB,KAI3C,OAAOJ,EAGYQ,GAAcC,KAAK,gBAAErB,EAAF,EAAEA,WAAYH,EAAd,EAAcA,IAAKE,EAAnB,EAAmBA,IAAnB,OAA4B,qBAAsBuB,QAAS,kBAAM3B,EAAM2B,QAAQtB,IAAauB,UAAU,OAA1E,SAAiF,qBAAKC,IAAK3B,EAAKE,IAAKA,KAA3FC,MAE9E,OACE,qBAAKuB,UAAU,eAAf,SACGZ,KCnCQc,EATE,SAAC9B,GAChB,OACE,sBAAK4B,UAAU,YAAf,UACE,8CAAiB5B,EAAM+B,SACvB,wBAAQJ,QAAS3B,EAAMgC,UAAvB,0BCISC,EARI,SAACjC,GAClB,OACE,qBAAK4B,UAAU,aAAf,SACE,6CAAgB5B,EAAM+B,YC+BbG,MA/Bf,WAAgB,IAAD,EACajC,mBAAS,GADtB,mBACN8B,EADM,KACCI,EADD,OAEwBlC,mBAAS,IAAImC,KAFrC,mBAENC,EAFM,KAESC,EAFT,OAGmBrC,oBAAS,GAH5B,mBAGNsC,EAHM,KAGIC,EAHJ,KAoBb,OACE,sBAAKZ,UAAU,MAAf,UACE,wHACA,cAAC,EAAD,CAAYG,MAAOA,IACjBQ,EACA,cAAC,EAAD,CAAUR,MAAOA,EAAOC,UAXZ,WAChBG,EAAS,GACTG,EAAY,IAAIF,KAChBI,GAAY,MASR,cAAC,EAAD,CAAOb,QArBO,SAAAc,GACdJ,EAAcK,IAAID,GACpBD,GAAY,IAEZF,GAAY,SAACK,GAAD,OAAcA,EAASC,IAAIH,MACvCN,GAAS,SAACJ,GAAD,QAAaA,aCT5Bc,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.923ce0e8.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/one.edcd120b.jpg\";","export default __webpack_public_path__ + \"static/media/two.97a5b2b3.jpg\";","export default __webpack_public_path__ + \"static/media/three.e1381a14.jpg\";","export default __webpack_public_path__ + \"static/media/four.0e31b7cf.jpg\";","export default __webpack_public_path__ + \"static/media/five.2203641c.jpg\";","export default __webpack_public_path__ + \"static/media/six.de60beea.jpg\";","export default __webpack_public_path__ + \"static/media/seven.c2f42323.jpg\";","export default __webpack_public_path__ + \"static/media/eight.d69a4036.jpg\";","export default __webpack_public_path__ + \"static/media/nine.0200397f.jpg\";","export default __webpack_public_path__ + \"static/media/ten.a90f8ad9.jpg\";","import React, { useState } from 'react';\nimport one from './images/cats/one.jpg';\nimport two from './images/cats/two.jpg';\nimport three from './images/cats/three.jpg';\nimport four from './images/cats/four.jpg';\nimport five from './images/cats/five.jpg';\nimport six from './images/cats/six.jpg';\nimport seven from './images/cats/seven.jpg';\nimport eight from './images/cats/eight.jpg';\nimport nine from './images/cats/nine.jpg';\nimport ten from './images/cats/ten.jpg';\n\n\nconst Cards = (props) => {\n  const [cards] = useState([\n    {img: one, alt: 'cat with mask on', cardNumber: 1},\n    {img: two, alt: 'cat with a white chest looking at the camera', cardNumber: 2},\n    {img: three, alt: 'gray tabby cat', cardNumber: 3},\n    {img: four, alt: 'gray kitten looking sweet', cardNumber: 4},\n    {img: five, alt: 'blue-eyed baby kitty', cardNumber: 5},\n    {img: six, alt: 'long-haired kitty in the snow', cardNumber: 6},\n    {img: seven, alt: 'kitten sleeping on its back', cardNumber: 7},\n    {img: eight, alt: 'majestic cat laying on a bed', cardNumber: 8},\n    {img: nine, alt: 'orange tabby basking in the sun', cardNumber: 9},\n    {img: ten, alt: 'kitten pawing toward the screen', cardNumber: 10},\n  ]);\n\n  // const randomSort = () => {\n  //   let r = [-1, 0, 1]\n  //   return r[Math.floor(Math.random() * r.length)];\n  // }\n\n  // Durstenfeld Shuffle Array\n  function randomSort() {\n    const array = cards.slice();\n    for (let i = array.length - 1; i > 0; i--) {\n        const j = Math.floor(Math.random() * (i + 1));\n        [array[i], array[j]] = [array[j], array[i]];\n    }\n    return array;\n  }\n  \n  const cardDisplay = (randomSort()).map( ({cardNumber, img, alt}) => <div key={cardNumber} onClick={() => props.onClick(cardNumber)} className=\"card\"><img src={img} alt={alt}></img></div>)\n  \n  return (\n    <div className=\"card-display\">\n      {cardDisplay}\n    </div>\n  )\n}\n\nexport default Cards;","import React from 'react';\n\nconst GameOver = (props) => {\n  return (\n    <div className=\"game-over\">\n      <p>Final Score: {props.score}</p>\n      <button onClick={props.resetGame}>New Game</button>\n    </div>\n  )\n}\n\nexport default GameOver;","import React from 'react';\n\nconst Scoreboard = (props) => {\n  return (\n    <div className=\"scoreboard\">\n      <p>Your Score: {props.score}</p>\n    </div>\n  )\n}\n\nexport default Scoreboard;","import React, { useState } from 'react';\nimport Cards from './components/Cards';\nimport GameOver from './components/GameOver';\nimport Scoreboard from './components/Scoreboard';\n\nfunction App() {\n  const [score, setScore] = useState(0);\n  const [selectedCards, setSelected] = useState(new Set());\n  const [gameOver, setGameOver] = useState(false);\n\n  const handleClick = id => {\n    if (selectedCards.has(id)) {\n      setGameOver(true);\n    } else {\n      setSelected((selected) => selected.add(id));\n      setScore((score) => ++score);\n    }\n  }\n  \n  const resetGame = () => {    \n    setScore(0);\n    setSelected(new Set());\n    setGameOver(false);\n  }\n\n  return (\n    <div className=\"App\">\n      <h1>The goal is to select as many images in a row, without selecting the same image twice.</h1>\n      <Scoreboard score={score} />\n      { gameOver ? \n        <GameOver score={score} resetGame={resetGame} /> : \n        <Cards onClick={handleClick}/> }\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'normalize.css'; \nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}